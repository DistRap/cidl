{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE DataKinds #-}

module Main where

import Ivory.Language
import Ivory.Tower
import Ivory.Tower.Config
import Ivory.Tower.Compile
import Ivory.OS.FreeRTOS.Tower.STM32

import Ivory.Serialize
import $module_path$.Ivory.Types (typeModules)

$imports$

main :: IO ()
main = towerCompile p app
  where p topts = do
            cfg <- getConfig topts (stm32ConfigParser (stm32f405Defaults 24))
            return (stm32FreeRTOS id cfg)

app :: Tower e ()
app = do
  (c :: (ChanInput (Array 80 (Stored Uint8)), ChanOutput (Array 80 (Stored Uint8)))) <- channel
  $app_body$
